# Bringing it All Together

So far in this book we have taken a look into the world of Angular Schematics and conducted a survey of the tools that it provides for developers. In the *"Schematics Collection"* section we learned that individual schematics are located in a custom library of sorts that is aptly named a "schematics collection". Next, in the *"Schematics Overview"* section, we saw how Angular Schematics provides a sleek CLI through which developers can run individual schematics from their own schematics collections. We then dove in to the individual types used by schematics and learned about the unique responsibilities of `Trees`, `Rules`, `Sources`, `Actions`, and `Sinks`. In the *"Templating"* section we saw the powerful EJS-like templating engine that Angular Schematics provides and learned how we can leverage templates to scaffold out new projects. Lastly, in the *"Task"* section, we learned about the powerful task-running feature Angular Schematic provides and how we can run external commands like `git init` and `npm install` via schematics.

Now it's time to bring everything together. Enough talk - let's learn by example! In the following sections we are going to set up our environment and then take a look at two different schematic "recipes" - this is a cookbook after all! Using the knowledge base we have established in the previous sections, we are now well equipped to create our own, useful schematics. These recipes will show us how we can both augment the schematics that Angular CLI provides and scaffold out new Node projects. This cookbook includes the following recipes:
  
- Recipe 1 - "Augmenting Angular's Component Schematic"
- Recipe 2 - "Scaffolding a new, Node Project"

Enjoy!