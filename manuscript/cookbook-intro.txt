# Bringing it All Together 

So far in this book we have taken a look into the world of Angular Schematics and conducted a survey of the tools it provides for developers. In the `Schematics Collection` section we saw how individual schematics are located in a library of sorts called a schematics collection. Next, in the `Schematics Overview` section, we saw how Angular Schematics provides a sleek CLI through which developers can pass options to and run individual schematics from within a schematics collection - transforming a filesystem appropriately. We then dove in to the individual types used by schematics and learned about the unique responsibilities of Trees, Rules, Sources, Actions, and Sinks. In the `Templating` section we saw the powerful EJS-like templating engine that Angular Schematics provides and learned how we can leverage templates to scaffold out new projects. Lastly, in the `Task` section, we learned about the powerful task-running feature Angular Schematic provides and how we can run external commands like `git init` and `npm install` against our schematic's working directory.

Now its time to bring everything together. Enough talking - let's learn by example! In the following sections we are going to set up our environment and then take a look at four different schematic recipes - this is a cookbook after all! Using the knowledge base we have established in the previous sections, we are now well equipped to create our own, useful schematics. These recipes will show how we can alter already existing schematics that Angular CLI provides, scaffold out new Node projects, and how to create a Schematic which uses a custom Task we will create! This cookbook includes the following recipes:
  
  - Recipe 1 - "Altering `ng generate component`"
  - Recipe 2 - "Altering `ng new`"
  - Recipe 3 - "Scaffolding a new, Node Project"
  - Recipe 4 - "Creating our own Tasks"

Enjoy!