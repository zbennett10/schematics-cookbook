# The Rule

Rules are simply functions that operate on Trees and return a new Tree with modifications.

Rules have two inputs and 1 output. The inputs are a Tree and a SchematicContext. The output is a Tree.

Rules are the base of schematics and are where schematic authors will write the majority of their schematic's logic.

The Schematics library provides numerous Rule factories. These following factories are the main functions which will be used by developers who wish to create or customize a schematic.

## Rule Factories
---

`noop(): Rule`

Returns a rule that does nothing on the tree that is passed in to it

---

`chain(rules: Rule[]): Rule`

This is an oft used Rule factor which returns a rule that chains the rules passed in.

---

`mergeWith(source: Source, strategy?: MergeStrategy): Rule`

This function, at its core, merges two trees with an optional MergeStrategy. The first tree in the merge is taken from calling the Source function that is passed in to the 'mergeWith' Rule factory. The second tree is passed in to the resulting Rule.
    
---

`branchAndMerge(rule: Rule, strategy?: MergeStrategy): Rule`

---

`filter(predicate: FilePredicate<boolean>): Rule`

---

`forEach(operator: FileOperator)`

---

`move(input: string)`

---
